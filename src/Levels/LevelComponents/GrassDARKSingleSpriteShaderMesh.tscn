[gd_scene load_steps=5 format=3 uid="uid://ccspmm8kgjnt7"]

[ext_resource type="Texture2D" uid="uid://dt58pf3vx4qtg" path="res://Temp/PixelProject/Assets/2D/Leaf.png" id="2_h64ir"]

[sub_resource type="Shader" id="Shader_ans1i"]
code = "shader_type spatial;
render_mode blend_mix, cull_back; //blend_mix, cull_back; // unshaded, cull_back;

uniform sampler2D albedo_tex : filter_nearest, source_color;
uniform vec4 albedo_color : source_color = vec4(1.0);

// Wind Animation
uniform float wind_sway_strength : hint_range(0.0, 1.0) = 0.1;
uniform float wind_sway_speed : hint_range(0.1, 10.0) = 2.0;
uniform float wind_time_scale : hint_range(0.0, 5.0) = 1.0;
uniform float wind_time_offset = 0.0;
uniform bool sway_from_bottom = false; // 

varying vec3 world_billboard_normal;

void vertex() {
    vec3 mod_vertex = VERTEX;

    float time = TIME * wind_time_scale + wind_time_offset;

    // âœ… Control sway influence origin (top or bottom)
    float sway_influence = sway_from_bottom ? UV.y : (1.0 - UV.y);
    float sway = sin((time + VERTEX.x * 0.5) * wind_sway_speed) * wind_sway_strength * sway_influence;
    mod_vertex.x += sway;

    // Billboard facing the camera
    mat4 billboard_modelview = VIEW_MATRIX * mat4(
        INV_VIEW_MATRIX[0],
        INV_VIEW_MATRIX[1],
        INV_VIEW_MATRIX[2],
        MODEL_MATRIX[3]
    );

    MODELVIEW_MATRIX = billboard_modelview;
    VERTEX = mod_vertex;

    world_billboard_normal = transpose(mat3(MODELVIEW_MATRIX)) * vec3(0.0, 0.0, 1.0);
}

void fragment() {
    vec4 tex = texture(albedo_tex, UV);
    ALBEDO = tex.rgb * albedo_color.rgb;
    ALPHA = tex.a * albedo_color.a;

    if (ALPHA < 0.1) {
        discard;
    }
}

void light() {
    vec3 normal = normalize(world_billboard_normal);
    float NdotL = max(dot(normal, LIGHT), 0.0);
    DIFFUSE_LIGHT += NdotL * ALBEDO * LIGHT_COLOR * ATTENUATION;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ans1i"]
render_priority = 0
shader = SubResource("Shader_ans1i")
shader_parameter/albedo_tex = ExtResource("2_h64ir")
shader_parameter/albedo_color = Color(0.261304, 0.302209, 0.141167, 1)
shader_parameter/wind_sway_strength = 0.1
shader_parameter/wind_sway_speed = 0.5
shader_parameter/wind_time_scale = 1.0
shader_parameter/wind_time_offset = 0.5
shader_parameter/sway_from_bottom = false

[sub_resource type="QuadMesh" id="QuadMesh_ms8ko"]
material = SubResource("ShaderMaterial_ans1i")
size = Vector2(0.5, 0.5)

[node name="GrassSingleSpriteShaderMesh" type="MeshInstance3D"]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0)
mesh = SubResource("QuadMesh_ms8ko")
skeleton = NodePath("../..")
